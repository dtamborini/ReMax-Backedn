// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersService.Data.Context;

#nullable disable

namespace UsersService.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20250814091443_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UsersService.Data.Entities.Resident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("CustomData")
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("DelegateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DelegatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DelegateId");

                    b.HasIndex("DelegatorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("Surname");

                    b.HasIndex("Name", "Surname");

                    b.ToTable("Residents", (string)null);
                });

            modelBuilder.Entity("UsersService.Data.Entities.ResidentPremises", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("CustomData")
                        .HasColumnType("jsonb");

                    b.Property<double?>("Percentage")
                        .HasPrecision(18, 4)
                        .HasColumnType("double precision");

                    b.Property<Guid>("PremisesBuildingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResidentId")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("PremisesBuildingId");

                    b.HasIndex("ResidentId");

                    b.HasIndex("ResidentId", "BuildingId");

                    b.HasIndex("ResidentId", "PremisesBuildingId")
                        .IsUnique()
                        .HasDatabaseName("IX_ResidentPremises_Resident_Premises_Unique");

                    b.ToTable("ResidentPremises", (string)null);
                });

            modelBuilder.Entity("UsersService.Data.Entities.Resident", b =>
                {
                    b.HasOne("UsersService.Data.Entities.Resident", "Delegate")
                        .WithMany("DelegatedFrom")
                        .HasForeignKey("DelegateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UsersService.Data.Entities.Resident", "Delegator")
                        .WithMany("DelegatedTo")
                        .HasForeignKey("DelegatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Delegate");

                    b.Navigation("Delegator");
                });

            modelBuilder.Entity("UsersService.Data.Entities.ResidentPremises", b =>
                {
                    b.HasOne("UsersService.Data.Entities.Resident", "Resident")
                        .WithMany("ResidentPremises")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("UsersService.Data.Entities.Resident", b =>
                {
                    b.Navigation("DelegatedFrom");

                    b.Navigation("DelegatedTo");

                    b.Navigation("ResidentPremises");
                });
#pragma warning restore 612, 618
        }
    }
}
